<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data modeling on DWH Academy Posts: Agile Data warehousing in the practise</title>
    <link>https://posts.dwhacademy.com/categories/data-modeling/</link>
    <description>Recent content in Data modeling on DWH Academy Posts: Agile Data warehousing in the practise</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://posts.dwhacademy.com/categories/data-modeling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DWH Design patterns in practice: Subtyping</title>
      <link>https://posts.dwhacademy.com/dwh_design-patterns-in-practice-subtyping/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://posts.dwhacademy.com/dwh_design-patterns-in-practice-subtyping/</guid>
      <description>Subtyping is a very powerful tool used in the relational models. In this article, I would like to show you why this technique is widely used in many data warehouses and how to implement it in your project, based on the party entity, probably the most common example.Â Definition Let begin with the definition - subtyping is a technique where an entity is broken into Supertype entity with common (shared) attributes, and also 2 or more Subtype entities that contain attributes that are unique for those 2 or more entities.</description>
    </item>
    
    <item>
      <title>Connecting Products to Hierarchy in 3NF model</title>
      <link>https://posts.dwhacademy.com/connecting_products_to_hierarchy/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://posts.dwhacademy.com/connecting_products_to_hierarchy/</guid>
      <description>This article is the second part of the series of how to cope with hierarchies in 3NF models (Hierarchies in 3NF model). If you have not read the previous one yet, I strongly encourage you to read it because from time to time in this article I will be referring to the previous article in the series.
Today I will show you how to connect underlying products with their hierarchy.</description>
    </item>
    
    <item>
      <title>Hierarchies in 3NF model</title>
      <link>https://posts.dwhacademy.com/hierarchies/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://posts.dwhacademy.com/hierarchies/</guid>
      <description>In today&amp;rsquo;s article, I want to show you how to store n- number of hierarchies with n- number of levels using just 4 tables. The 4 tables will represent 3rd normal form (3NF) of our new integrated model. The scripts below you can apply in your own model and see how powerful this technique is, I&amp;rsquo;ve been using it for some time and the actual implementation does not vary that much whatever hierarchy you have, trust me!</description>
    </item>
    
    <item>
      <title>Naming Standards</title>
      <link>https://posts.dwhacademy.com/naming-standards/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://posts.dwhacademy.com/naming-standards/</guid>
      <description>The main goal of adopting a naming convention for database objects is so that you and others can easily identify the type and purpose of all objects contained in the database. In this article, I want to describe one of the possible ways of adopting naming standards, undoubtedly there are other standards that also work but my goal is to show you the ones I applied and they proved to be working very well.</description>
    </item>
    
  </channel>
</rss>